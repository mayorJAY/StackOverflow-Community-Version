apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'

android {
    namespace 'com.josycom.mayorjay.flowoverstack'
    compileSdk 34

    defaultConfig {
        applicationId "com.josycom.mayorjay.flowoverstack"
        minSdk 26
        targetSdk 34
        versionCode 200
        versionName "2.00"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        Properties keyProps = new Properties()
        keyProps.load(new FileInputStream(project.rootProject.file('local.properties')))
        debug {
            storeFile file(keyProps.getProperty("STORE_FILE"))
            storePassword keyProps.getProperty("STORE_PASSWORD", "")
            keyAlias keyProps.getProperty("KEY_ALIAS", "")
            keyPassword keyProps.getProperty("KEY_PASSWORD", "")
        }
        release {
            storeFile file(keyProps.getProperty("STORE_FILE"))
            storePassword keyProps.getProperty("STORE_PASSWORD", "")
            keyAlias keyProps.getProperty("KEY_ALIAS", "")
            keyPassword keyProps.getProperty("KEY_PASSWORD", "")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility = 17
        targetCompatibility = 17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    kapt {
        correctErrorTypes true
    }

    lint {
        // https://github.com/bumptech/glide/issues/4940
        lintConfig = file("$rootDir/android_glide_lint.xml")
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'

    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // Logging
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'

    // Paging library
    implementation 'androidx.paging:paging-runtime:3.1.0'

    // ViewModel
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.4.0"

    // SwipeRefreshLayout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Firebase analytics
    implementation 'com.google.firebase:firebase-analytics:20.0.0'

    // Firebase crashlytics
    apply plugin: 'com.google.firebase.crashlytics'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.4'

    // MarkdownView
    implementation 'com.github.mukeshsolanki:MarkdownView-Android:1.0.8'

    // Image cropper
    implementation 'com.vanniktech:android-image-cropper:4.3.3'

    // ML Kit
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:17.0.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Play core
    implementation 'com.google.android.play:asset-delivery:2.2.2'
    implementation 'com.google.android.play:feature-delivery:2.1.0'
    implementation 'com.google.android.play:app-update:2.1.0'

    // Kotlin
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Preferences DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "org.mockito:mockito-core:3.12.4"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'

    // Instrumentation tests
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
}
